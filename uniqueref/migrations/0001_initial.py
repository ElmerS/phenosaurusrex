# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-26 15:27
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('description', models.TextField()),
                ('chromosome', models.CharField(max_length=2)),
                ('orientation', models.CharField(max_length=1)),
            ],
            options={
                'verbose_name': 'Gene entry',
                'verbose_name_plural': 'the genes in the database',
            },
        ),
        migrations.CreateModel(
            name='IPSDatapoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low', models.IntegerField()),
                ('lowtotal', models.IntegerField()),
                ('high', models.IntegerField()),
                ('hightotal', models.IntegerField()),
                ('lowcor', models.IntegerField()),
                ('lowtotalcor', models.IntegerField()),
                ('highcor', models.IntegerField()),
                ('hightotalcor', models.IntegerField()),
                ('pv', models.FloatField()),
                ('fcpv', models.FloatField()),
                ('mi', models.FloatField()),
                ('insertions', models.IntegerField()),
                ('relgene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uniqueref.Gene')),
            ],
            options={
                'verbose_name': 'Datapoint of a intracellular phenotype screen',
                'verbose_name_plural': 'datapoints of intracellular phenotype screens',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startpos', models.IntegerField()),
                ('endpos', models.IntegerField()),
                ('relgene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uniqueref.Gene')),
            ],
            options={
                'verbose_name': 'Genomic location of a gene',
                'verbose_name_plural': 'genomic locations (of genes)',
            },
        ),
        migrations.CreateModel(
            name='PSSDatapoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nm', models.IntegerField()),
                ('tnm', models.IntegerField()),
                ('ct', models.IntegerField()),
                ('tct', models.IntegerField()),
                ('cct', models.IntegerField()),
                ('ctct', models.IntegerField()),
                ('pv', models.FloatField()),
                ('fcpv', models.FloatField()),
                ('ti', models.IntegerField()),
                ('mi', models.FloatField()),
                ('seq', models.IntegerField()),
                ('relgene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uniqueref.Gene')),
            ],
            options={
                'verbose_name': 'Datapoint of a positive selection screen',
                'verbose_name_plural': 'datapoints of positive selection screens',
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('carried_out_by_id', models.IntegerField()),
                ('description', models.TextField()),
                ('induced', models.BooleanField(default=False)),
                ('knockout', models.BooleanField(default=False)),
                ('celline', models.CharField(choices=[(b'HAP1', b'HAP1'), (b'KBM7', b'KBM7')], default=b'HAP1', max_length=4)),
                ('screen_date', models.DateTimeField(blank=True, null=True)),
                ('screentype', models.CharField(choices=[(b'PS', b'Positive Selection'), (b'SL', b'Synthetic Lethality'), (b'IP', b'Intracellular Phenotype')], default=b'IP', max_length=2)),
            ],
            options={
                'verbose_name': 'Name, descriptions and type of a screen',
                'verbose_name_plural': 'screens and their individual properties',
            },
        ),
        migrations.AddField(
            model_name='pssdatapoint',
            name='relscreen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uniqueref.Screen'),
        ),
        migrations.AddField(
            model_name='ipsdatapoint',
            name='relscreen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uniqueref.Screen'),
        ),
    ]
